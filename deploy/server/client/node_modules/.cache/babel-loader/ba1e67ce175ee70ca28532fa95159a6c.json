{"ast":null,"code":"var _jsxFileName = \"/home/system1/Documents/React/quizgame/src/components/gamescreen.js\";\nimport React, { Component } from 'react';\nimport '../css/gamescreen.css'; // import {Button} from 'react-bootstrap';\n\nimport { Banner } from './userhome';\nimport backspace from '../images/ic-backspace@3x.png';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport Timer from 'react-compound-timer';\nexport default class GameScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: true,\n      game: this.props.location.state.game,\n      id: 0,\n      counterText: 'Game will start in'\n    };\n    this.handleBackSpace = this.handleBackSpace.bind(this);\n    this.handleAnswered = this.handleAnswered.bind(this);\n  }\n\n  handleBackSpace(e) {\n    e.preventDefault();\n    this.props.history.goBack();\n  }\n\n  handleAnswered(e) {\n    console.log(this.state.id);\n\n    if (this.state.id + 1 < this.state.game.questions.length) {\n      console.log(this.state.id + ' ' + this.state.game.questions.length);\n      var currentQ = this.state.id;\n      currentQ++;\n      this.setState({\n        id: currentQ,\n        counterText: 'Next Question in',\n        timer: true\n      });\n    } else if (this.state.id + 1 === this.state.game.questions.length) {\n      console.log('winner');\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        timer: false\n      });\n    }, 5000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gameScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, this.state.timer ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"white-screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-counter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(RoundCountdown, {\n      text: this.state.counterText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-gameScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Banner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back-button\",\n      onClick: this.handleBackSpace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: backspace,\n      alt: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(GameArea, {\n      game: this.state.game,\n      id: this.state.id,\n      handleAnswered: this.handleAnswered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\nexport function RoundCountdown(props) {\n  const text = props.text;\n  return /*#__PURE__*/React.createElement(CountdownCircleTimer, {\n    isPlaying: true,\n    duration: 5,\n    colors: [[\"#D14081\"]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, ({\n    remainingTime\n  }) => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 42\n    }\n  }, text, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 54\n    }\n  }), remainingTime, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 74\n    }\n  }), \"seconds\"));\n}\nexport function GameArea(props) {\n  const id = props.id;\n  const game = props.game;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block-topper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"que-num\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }\n  }, \"Question \", id + 1, \" of \", game.questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    initialTime: 20000,\n    direction: \"backward\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, () => /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Timer.Seconds, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }), \"s left\")))), /*#__PURE__*/React.createElement(QuestionImage, {\n    image: game.questions[id].image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Question, {\n    question: game.questions[id].question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AnswerBlock, {\n    answer: game.questions[id].answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ShuffledAnswerBlock, {\n    shuffledAnswer: game.questions[id].shuffledAnswer,\n    answer: game.questions[id].answer,\n    answered: props.handleAnswered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }));\n}\nexport function Question(props) {\n  const question = props.question;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, question);\n}\nexport function QuestionImage(props) {\n  const questionImage = props.image;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: questionImage,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }));\n}\nexport function AnswerBlock(props) {\n  var answer = props.answer;\n  answer = answer.trim();\n  const answerDivs = [];\n\n  for (let index = 0; index < answer.length; index++) {\n    const element = answer[index];\n    answerDivs.push( /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      key: element,\n      className: \"inner-answer-div\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, answerDivs);\n}\nexport function ShuffledAnswerBlock(props) {\n  var shuffledAnswer = props.shuffledAnswer;\n  const answerdiv = document.getElementsByClassName('answer');\n  var clickedCount = 0;\n  shuffledAnswer = shuffledAnswer.trim();\n  const answer = props.answer;\n  var staus = false;\n  var tempAnswer = '';\n  var checkTimer = setTimeout(() => {\n    if (staus) {\n      console.log('success');\n    } else {\n      console.log('failure');\n    }\n  }, 20000);\n\n  const userClicked = e => {\n    if (validation()) {\n      var clickedChar = e.target.value;\n      e.target.value = '';\n      answerdiv[0].childNodes[clickedCount].value = clickedChar;\n      clickedCount++;\n      tempAnswer = tempAnswer + clickedChar;\n\n      if (tempAnswer === answer) {\n        console.log('success');\n        props.answered();\n        staus = true;\n        clearTimeout(checkTimer);\n      } else {\n        console.log('fail');\n      }\n    }\n  };\n\n  const validation = () => {\n    if (clickedCount < shuffledAnswer.length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const answerDivs = [];\n\n  for (let index = 0; index < shuffledAnswer.length; index++) {\n    const element = shuffledAnswer[index];\n    answerDivs.push( /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      key: element,\n      className: \"inner-sanswer-div\",\n      value: element,\n      onClick: e => {\n        userClicked(e);\n      },\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sanswer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, answerDivs);\n}","map":{"version":3,"sources":["/home/system1/Documents/React/quizgame/src/components/gamescreen.js"],"names":["React","Component","Banner","backspace","CountdownCircleTimer","Timer","GameScreen","constructor","props","state","timer","game","location","id","counterText","handleBackSpace","bind","handleAnswered","e","preventDefault","history","goBack","console","log","questions","length","currentQ","setState","componentDidMount","setTimeout","render","RoundCountdown","text","remainingTime","GameArea","image","question","answer","shuffledAnswer","Question","QuestionImage","questionImage","AnswerBlock","trim","answerDivs","index","element","push","ShuffledAnswerBlock","answerdiv","document","getElementsByClassName","clickedCount","staus","tempAnswer","checkTimer","userClicked","validation","clickedChar","target","value","childNodes","answered","clearTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../css/gamescreen.css';\n// import {Button} from 'react-bootstrap';\nimport {Banner} from './userhome';\nimport backspace from '../images/ic-backspace@3x.png';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport Timer from 'react-compound-timer';\nexport default class GameScreen extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            timer : true,\n            game : this.props.location.state.game,\n            id : 0,\n            counterText : 'Game will start in'\n        };\n        this.handleBackSpace = this.handleBackSpace.bind(this);\n        this.handleAnswered = this.handleAnswered.bind(this);\n    }\n    handleBackSpace(e){\n        e.preventDefault();\n        this.props.history.goBack();\n    }\n    handleAnswered(e){\n        console.log(this.state.id);\n        if((this.state.id+1) < this.state.game.questions.length){\n            console.log(this.state.id+' '+this.state.game.questions.length);\n            var currentQ = this.state.id;\n            currentQ++;\n            this.setState({\n                id: currentQ,\n                counterText:'Next Question in',\n                timer:true\n            });\n        }\n        else if((this.state.id+1) === this.state.game.questions.length){\n            console.log('winner');\n        }\n    }\n    componentDidMount(){\n        setTimeout(() => {\n            this.setState({\n                timer : false\n            });\n        }, 5000);\n    }\n    render() {\n        return (\n            <div className=\"gameScreen\">\n                {this.state.timer ? \n                    <div className=\"white-screen\">\n                        <div className=\"inner-counter\" >\n                        <RoundCountdown text={this.state.counterText}/> \n                        </div>\n                    </div>\n                    :\n                    <div className=\"inner-gameScreen\">\n                    <Banner/>\n                    <div className=\"back-button\" onClick={this.handleBackSpace}>\n                        <img src={backspace} alt=\"back\"/>\n                    </div>\n                    <div className=\"game-main\">\n                        <GameArea game={this.state.game} id={this.state.id} handleAnswered={this.handleAnswered}/>\n                    </div>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\n\nexport function RoundCountdown(props){\n    const text = props.text;\n    return(\n            <CountdownCircleTimer\n            isPlaying\n            duration={5}\n            colors={[[\"#D14081\"]]}\n            >\n                {({ remainingTime }) =>  <span>{text}<br/>{remainingTime}<br/>seconds</span>}\n            </CountdownCircleTimer>\n    )\n}\n\n\n\nexport function GameArea(props){ \n    const id= props.id;\n    const game = props.game;\n    return(\n        <div className=\"block\">\n            <div className=\"block-topper\">\n               <div className=\"que-num\">\n               Question {id+1} of {game.questions.length}\n               </div> \n            <div className=\"question-timer\">\n                <Timer\n                  initialTime={20000}\n                  direction=\"backward\"  \n                >\n                    {() => (\n                        <React.Fragment>\n                            <Timer.Seconds />s left\n                        </React.Fragment>\n                    )}\n                </Timer>\n            </div>\n            </div>\n            <QuestionImage image={game.questions[id].image}/>\n            <Question question={game.questions[id].question}/>\n            <AnswerBlock answer={game.questions[id].answer} />\n            <ShuffledAnswerBlock shuffledAnswer={game.questions[id].shuffledAnswer} answer={game.questions[id].answer} answered={props.handleAnswered}/>\n        </div>\n    )\n}\n\nexport function Question(props){\n    const question = props.question;\n    return(\n        <div className=\"question\">\n            {question}\n        </div>\n    )\n} \n\nexport function QuestionImage(props){\n    const questionImage = props.image;\n    return(\n        <div className=\"questionImage\">\n            <img src={questionImage} alt=\"\"/>\n        </div>\n    )\n}\n\nexport function AnswerBlock(props){\n    var answer = props.answer;\n    answer = answer.trim();\n    const answerDivs = [];\n    for (let index = 0; index < answer.length; index++) {\n        const element = answer[index];\n        answerDivs.push(\n            <input type=\"text\" key={element} className=\"inner-answer-div\" readOnly/>\n        );\n        \n    } \n    return(\n        <div className=\"answer\">\n            {answerDivs}\n        </div>\n    )\n}\n\n\nexport function ShuffledAnswerBlock(props){\n    \n    var shuffledAnswer = props.shuffledAnswer;\n    const answerdiv = document.getElementsByClassName('answer');\n    var clickedCount = 0;\n    shuffledAnswer = shuffledAnswer.trim();\n    const answer = props.answer;\n    var staus = false;\n    var tempAnswer = '';\n    var checkTimer= setTimeout(() => {\n        if(staus){\n            console.log('success');\n        }\n        else{\n            console.log('failure');\n        }\n    }, 20000);\n    const userClicked = (e) => {\n        if(validation()){\n            var clickedChar = e.target.value;\n            e.target.value = '';\n            answerdiv[0].childNodes[clickedCount].value = clickedChar;\n            clickedCount++;\n            tempAnswer = tempAnswer + clickedChar;\n            if(tempAnswer === answer){\n                console.log('success');\n                props.answered();\n                staus = true;\n                clearTimeout(checkTimer);\n            }\n            else{\n                console.log('fail');\n            }\n        }\n    }\n    const validation = () => {\n        if(clickedCount < shuffledAnswer.length){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    const answerDivs = [];\n    for (let index = 0; index < shuffledAnswer.length; index++) {\n        const element = shuffledAnswer[index];\n        answerDivs.push(\n            <input type=\"text\"  key={element} className=\"inner-sanswer-div\" value={element}\n            onClick={(e) => {userClicked(e)}}  readOnly />\n        );\n        \n    } \n    return(\n        <div className=\"sanswer\">\n            {answerDivs}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
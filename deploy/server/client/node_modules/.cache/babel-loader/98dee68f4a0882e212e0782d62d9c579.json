{"ast":null,"code":"var _jsxFileName = \"/home/system1/Documents/React/quizgame/src/components/gamescreen.js\";\nimport React, { Component } from 'react';\nimport '../css/gamescreen.css';\nimport { Button } from 'react-bootstrap';\nimport history from '../history';\nimport { Banner } from './userhome';\nimport backspace from '../images/wrong@3x.png';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport Timer from 'react-compound-timer';\nimport { FaReply } from 'react-icons/fa';\nimport Tick from '../images/correct@3x.png';\nimport quit from '../images/quit-emoji@3x.png';\nexport default class GameScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: true,\n      game: this.props.location.state.game,\n      id: 0,\n      counterText: 'game-counter'\n    };\n    this.handleBackSpace = this.handleBackSpace.bind(this);\n    this.handleAnswered = this.handleAnswered.bind(this);\n    this.handleQuitGame = this.handleQuitGame.bind(this);\n  }\n\n  handleBackSpace(e) {\n    e.preventDefault();\n    const confirmDiv = document.getElementById('confirm-quit');\n    confirmDiv.style.display = 'inline-block';\n  }\n\n  handleAnswered(e) {\n    if (this.state.id + 1 < this.state.game.questions.length) {\n      var currentQ = this.state.id;\n      currentQ++;\n      this.setState({\n        id: currentQ,\n        counterText: 'question-counter',\n        timer: true\n      });\n      this.componentDidMount();\n    } else if (this.state.id + 1 === this.state.game.questions.length) {\n      history.push({\n        pathname: '/winner',\n        state: {\n          'winner': true\n        }\n      });\n    }\n  }\n\n  handleQuitGame(e) {\n    e.preventDefault();\n    this.props.history.goBack();\n  }\n\n  handleConfrimQuit(e) {\n    e.preventDefault();\n    this.props.history.goBack();\n  }\n\n  handleCancelQuit(e) {}\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        timer: false\n      });\n    }, 5000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gameScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, this.state.timer ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"white-screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-counter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(RoundCountdown, {\n      text: this.state.counterText,\n      quitgame: this.handleQuitGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Banner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"confirm-quit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: quit,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }), \"Are you sure?\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      id: \"cq-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Confirm\"), /*#__PURE__*/React.createElement(Button, {\n      id: \"cq=cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-gameScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gback-button\",\n      onClick: this.handleBackSpace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: backspace,\n      alt: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(GameArea, {\n      game: this.state.game,\n      id: this.state.id,\n      handleAnswered: this.handleAnswered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n}\nexport function RoundCountdown(props) {\n  const text = props.text;\n\n  if (text === 'game-counter') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CountdownCircleTimer, {\n      isPlaying: true,\n      duration: 5,\n      colors: [[\"#D14081\"]],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, ({\n      remainingTime\n    }) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 46\n      }\n    }, \"Game will Start in\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 70\n      }\n    }), remainingTime, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 90\n      }\n    }), \"seconds\")), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"quit-game\",\n      onClick: props.quitgame,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"x\\xA0 quit game\"));\n  }\n\n  if (text === 'question-counter') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Correct Answer\"), /*#__PURE__*/React.createElement(\"img\", {\n      id: \"tick\",\n      src: Tick,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CountdownCircleTimer, {\n      isPlaying: true,\n      duration: 5,\n      colors: [[\"#D14081\"]],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, ({\n      remainingTime\n    }) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 46\n      }\n    }, \"Next Question in\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 68\n      }\n    }), remainingTime, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 88\n      }\n    }), \"seconds\")));\n  }\n}\nexport function GameArea(props) {\n  const id = props.id;\n  const game = props.game;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block-topper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"que-num\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 16\n    }\n  }, \"Question \", id + 1, \" of \", game.questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    initialTime: 20000,\n    direction: \"backward\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, () => /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Timer.Seconds, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }), \"s left\")))), /*#__PURE__*/React.createElement(QuestionImage, {\n    image: game.questions[id].image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Question, {\n    question: game.questions[id].question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AnswerBlock, {\n    answer: game.questions[id].answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ShuffledAnswerBlock, {\n    shuffledAnswer: game.questions[id].shuffledAnswer,\n    answer: game.questions[id].answer,\n    answered: props.handleAnswered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }));\n}\nexport function Question(props) {\n  const question = props.question;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, question);\n}\nexport function QuestionImage(props) {\n  const questionImage = props.image;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: questionImage,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }));\n}\nexport function AnswerBlock(props) {\n  var answer = props.answer;\n  answer = answer.trim();\n  const answerDivs = [];\n\n  for (let index = 0; index < answer.length; index++) {\n    const element = answer[index];\n    answerDivs.push( /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      key: element,\n      className: \"inner-answer-div\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, answerDivs);\n}\nexport function ShuffledAnswerBlock(props) {\n  var shuffledAnswer = props.shuffledAnswer;\n  const answerdiv = document.getElementsByClassName('answer');\n  var clickedCount = 0;\n  shuffledAnswer = shuffledAnswer.trim();\n  const answer = props.answer;\n  var staus = false;\n  var tempAnswer = '';\n  var checkTimer = setTimeout(() => {\n    if (staus) {\n      console.log('success');\n    } else {\n      /* history.push({\n           pathname:'/betterluck',\n           state : {'failure' : 'seems like time out!'}\n       });*/\n    }\n  }, 20000);\n\n  const userClicked = e => {\n    if (validation() && e.target.value !== '') {\n      var clickedChar = e.target.value;\n      e.target.value = '';\n      answerdiv[0].childNodes[clickedCount].value = clickedChar;\n      clickedCount++;\n      tempAnswer = tempAnswer + clickedChar;\n\n      if (tempAnswer.toLowerCase() === answer) {\n        console.log('success');\n        props.answered();\n        staus = true;\n        clearTimeout(checkTimer);\n      } else {\n        if (tempAnswer.length === answer.length) {\n          if (tempAnswer.toLowerCase() !== answer) {\n            history.push({\n              pathname: '/betterluck',\n              state: {\n                'failure': 'seems like wrong answer!'\n              }\n            });\n          }\n        }\n      }\n    }\n  };\n\n  const validation = () => {\n    if (clickedCount < shuffledAnswer.length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const deletefunc = () => {\n    clickedCount = 0;\n    tempAnswer = '';\n    const aElements = answerdiv[0].childNodes;\n    const sanswerdiv = document.getElementsByClassName('sanswer');\n    const sElements = sanswerdiv[0].childNodes;\n\n    for (let index = 0; index < shuffledAnswer.length; index++) {\n      const element = shuffledAnswer[index];\n      aElements[index].value = '';\n      sElements[index].value = element.toUpperCase();\n    }\n  };\n\n  const answerDivs = [];\n\n  for (let index = 0; index < shuffledAnswer.length; index++) {\n    const element = shuffledAnswer[index];\n    answerDivs.push( /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      key: element,\n      className: \"inner-sanswer-div\",\n      value: element.toUpperCase(),\n      onClick: e => {\n        userClicked(e);\n      },\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sanswer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, answerDivs, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"delete\",\n    type: \"button\",\n    onClick: deletefunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, \"Delete\", /*#__PURE__*/React.createElement(FaReply, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 76\n    }\n  })));\n}","map":{"version":3,"sources":["/home/system1/Documents/React/quizgame/src/components/gamescreen.js"],"names":["React","Component","Button","history","Banner","backspace","CountdownCircleTimer","Timer","FaReply","Tick","quit","GameScreen","constructor","props","state","timer","game","location","id","counterText","handleBackSpace","bind","handleAnswered","handleQuitGame","e","preventDefault","confirmDiv","document","getElementById","style","display","questions","length","currentQ","setState","componentDidMount","push","pathname","goBack","handleConfrimQuit","handleCancelQuit","setTimeout","render","RoundCountdown","text","remainingTime","quitgame","color","GameArea","image","question","answer","shuffledAnswer","Question","QuestionImage","questionImage","AnswerBlock","trim","answerDivs","index","element","ShuffledAnswerBlock","answerdiv","getElementsByClassName","clickedCount","staus","tempAnswer","checkTimer","console","log","userClicked","validation","target","value","clickedChar","childNodes","toLowerCase","answered","clearTimeout","deletefunc","aElements","sanswerdiv","sElements","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../css/gamescreen.css';\nimport {Button} from 'react-bootstrap';\nimport history from '../history';\nimport {Banner} from './userhome';\nimport backspace from '../images/wrong@3x.png';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport Timer from 'react-compound-timer';\nimport {FaReply} from 'react-icons/fa';\nimport Tick from '../images/correct@3x.png';\nimport quit from '../images/quit-emoji@3x.png';\nexport default class GameScreen extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            timer : true,\n            game : this.props.location.state.game,\n            id : 0,\n            counterText : 'game-counter'\n        };\n        this.handleBackSpace = this.handleBackSpace.bind(this);\n        this.handleAnswered = this.handleAnswered.bind(this);\n        this.handleQuitGame = this.handleQuitGame.bind(this);\n    }\n    handleBackSpace(e){\n        e.preventDefault();\n        const confirmDiv= document.getElementById('confirm-quit');\n        confirmDiv.style.display='inline-block';\n        \n    }\n    handleAnswered(e){\n        if((this.state.id+1) < this.state.game.questions.length){\n            var currentQ = this.state.id;\n            currentQ++;\n            this.setState({\n                id: currentQ,\n                counterText:'question-counter',\n                timer:true\n            });\n            this.componentDidMount();\n        }\n        else if((this.state.id+1) === this.state.game.questions.length){\n            history.push({\n                pathname:'/winner',\n                state : {'winner' : true}\n            })\n        }\n    }\n    handleQuitGame(e){\n        e.preventDefault();\n        this.props.history.goBack();\n    }\n    handleConfrimQuit(e){\n        e.preventDefault();\n        this.props.history.goBack();\n    }\n    handleCancelQuit(e){\n\n    }\n    componentDidMount(){\n        setTimeout(() => {\n            this.setState({\n                timer : false\n            });\n        }, 5000);\n    }\n    render() {\n        return (\n            <div className=\"gameScreen\">\n                {this.state.timer ? \n                    <div className=\"white-screen\">\n                        <div className=\"inner-counter\" >\n                        <RoundCountdown text={this.state.counterText} quitgame={this.handleQuitGame}/> \n                        </div>\n                    </div>\n                    :\n                    <div>\n                    <Banner/>\n                    <div id=\"confirm-quit\">\n                        <img src={quit} alt=\"\"/>\n                        <br/>\n                        Are you sure?\n                        <br/>\n                        <Button id=\"cq-button\">Confirm</Button>\n                        <Button id=\"cq=cancel\">Cancel</Button>\n                    </div>\n                    <div className=\"inner-gameScreen\">\n                    <div className=\"gback-button\" onClick={this.handleBackSpace}>\n                        <img src={backspace} alt=\"back\"/>\n                    </div>\n                    <div className=\"game-main\">\n                        <GameArea game={this.state.game} id={this.state.id} handleAnswered={this.handleAnswered}/>\n                    </div>\n                </div>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\n\nexport function RoundCountdown(props){\n    const text = props.text;\n    if(text === 'game-counter'){\n        return(\n            <div>\n                <CountdownCircleTimer\n                isPlaying\n                duration={5}\n                colors={[[\"#D14081\"]]}\n                >\n                    {({ remainingTime }) =>  <span>Game will Start in<br/>{remainingTime}<br/>seconds</span>}\n                </CountdownCircleTimer>\n                <button id=\"quit-game\" onClick={props.quitgame} type=\"button\">x&nbsp; quit game</button>\n            </div>\n            )\n    }\n    if(text === 'question-counter'){\n        return(\n            <div>\n                <p style={{color:\"green\"}}>Correct Answer</p>\n                <img id=\"tick\" src={Tick} alt=\"\"/>\n                <CountdownCircleTimer\n                isPlaying\n                duration={5}\n                colors={[[\"#D14081\"]]}\n                >\n                    {({ remainingTime }) =>  <span>Next Question in<br/>{remainingTime}<br/>seconds</span>}\n                </CountdownCircleTimer>\n            </div>\n            )\n    }\n    \n}\n\n\n\nexport function GameArea(props){ \n    const id= props.id;\n    const game = props.game;\n    return(\n        <div className=\"block\">\n            <div className=\"block-topper\">\n               <div className=\"que-num\">\n               Question {id+1} of {game.questions.length}\n               </div> \n            <div className=\"question-timer\">\n                <Timer\n                  initialTime={20000}\n                  direction=\"backward\"  \n                >\n                    {() => (\n                        <React.Fragment>\n                            <Timer.Seconds />s left\n                        </React.Fragment>\n                    )}\n                </Timer>\n            </div>\n            </div>\n            <QuestionImage image={game.questions[id].image}/>\n            <Question question={game.questions[id].question}/>\n            <AnswerBlock answer={game.questions[id].answer} />\n            <ShuffledAnswerBlock shuffledAnswer={game.questions[id].shuffledAnswer} answer={game.questions[id].answer} answered={props.handleAnswered}/>\n        </div>\n    )\n}\n\nexport function Question(props){\n    const question = props.question;\n    return(\n        <div className=\"question\">\n            {question}\n        </div>\n    )\n} \n\nexport function QuestionImage(props){\n    const questionImage = props.image;\n    return(\n        <div className=\"questionImage\">\n            <img src={questionImage} alt=\"\"/>\n        </div>\n    )\n}\n\nexport function AnswerBlock(props){\n    var answer = props.answer;\n    answer = answer.trim();\n    const answerDivs = [];\n    for (let index = 0; index < answer.length; index++) {\n        const element = answer[index];\n        answerDivs.push(\n            <input type=\"text\" key={element} className=\"inner-answer-div\" readOnly/>\n        );\n        \n    } \n    return(\n        <div className=\"answer\">\n            {answerDivs}\n        </div>\n    )\n}\n\n\nexport function ShuffledAnswerBlock(props){\n    \n    var shuffledAnswer = props.shuffledAnswer;\n    const answerdiv = document.getElementsByClassName('answer');\n    var clickedCount = 0;\n    shuffledAnswer = shuffledAnswer.trim();\n    const answer = props.answer;\n    var staus = false;\n    var tempAnswer = '';\n    var checkTimer= setTimeout(() => {\n        if(staus){\n            console.log('success');\n        }\n        else{\n           /* history.push({\n                pathname:'/betterluck',\n                state : {'failure' : 'seems like time out!'}\n            });*/\n        }\n    }, 20000);\n    const userClicked = (e) => {\n        if(validation() && e.target.value !== ''){\n            var clickedChar = e.target.value;\n            e.target.value = '';\n            answerdiv[0].childNodes[clickedCount].value = clickedChar;\n            clickedCount++;\n            tempAnswer = tempAnswer + clickedChar;\n            if(tempAnswer.toLowerCase() === answer){\n                console.log('success');\n                props.answered();\n                staus = true;\n                clearTimeout(checkTimer);\n            }\n            else{   \n                if(tempAnswer.length === answer.length){\n                    if(tempAnswer.toLowerCase() !== answer){\n                        history.push({\n                            pathname:'/betterluck',\n                            state : {'failure' : 'seems like wrong answer!'}\n                        });\n                    }\n                }\n            }\n        }\n    }\n    \n    const validation = () => {\n        if(clickedCount < shuffledAnswer.length){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    const deletefunc = () => {\n        clickedCount = 0;\n        tempAnswer = '';\n        const aElements = answerdiv[0].childNodes;\n        const sanswerdiv = document.getElementsByClassName('sanswer');\n        const sElements = sanswerdiv[0].childNodes;\n        for (let index = 0; index < shuffledAnswer.length; index++) {\n            const element = shuffledAnswer[index];\n            aElements[index].value = '';\n            sElements[index].value = element.toUpperCase();\n        } \n    }\n    const answerDivs = [];\n    for (let index = 0; index < shuffledAnswer.length; index++) {\n        const element = shuffledAnswer[index];\n        answerDivs.push(\n            <input type=\"text\"  key={element} className=\"inner-sanswer-div\" value={element.toUpperCase()}\n            onClick={(e) => {userClicked(e)}}  readOnly />\n        );\n        \n    } \n    return(\n        <div className=\"sanswer\">\n            {answerDivs}\n            <br/>\n            <button id=\"delete\"  type=\"button\"  onClick={deletefunc}>Delete<FaReply/></button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}